import React, {useEffect, useRef} from 'react';
import {
    View,
    Text,
    StyleSheet,
    ActivityIndicator,
    Animated, Easing
} from 'react-native';
import NetInfo from '@react-native-community/netinfo';
import {useDispatch} from 'react-redux';
import {setConnectionStatus} from '../actions/connectionActions';
import {useFonts} from "expo-font";
import colors from "../config/theme";
import typography from "../config/typography";
import {FontAwesome} from "@expo/vector-icons";

const SplashScreen: React.FC = ({
                                    navigation
                                }: any) => {
    const [fontsLoaded] = useFonts({
        'poppins-regular': require('../../assets/fonts/Poppins-Regular.ttf'),
        'poppins-medium': require('../../assets/fonts/Poppins-Medium.ttf'),
        'poppins-bold': require('../../assets/fonts/Poppins-Bold.ttf'),
        'poppins-semibold': require('../../assets/fonts/Poppins-SemiBold.ttf'),
        'poppins-black': require('../../assets/fonts/Poppins-Black.ttf'),
        'poppins-italic': require('../../assets/fonts/Poppins-Italic.ttf'),
    });
    const dispatch = useDispatch();

    const positionCurtain = useRef(new Animated.Value(200)).current;
    const positionIcon = useRef(new Animated.Value(-36)).current;
    const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));

    useEffect(() => {
        Animated.loop(
            Animated.sequence([
                Animated.timing(positionCurtain, {
                    toValue: 0,
                    duration: 1000,
                    useNativeDriver: false,
                    easing: Easing.out(Easing.ease),
                }),
                Animated.timing(positionCurtain, {
                    toValue: 130,
                    duration: 1000,
                    useNativeDriver: false
                }),
            ])

        ).start();
    }, [positionCurtain]);

    useEffect(() => {
        Animated.loop(
            Animated.sequence([
                Animated.timing(positionIcon, {
                    toValue: 150,
                    delay: 350,
                    duration: 650,
                    useNativeDriver: false,
                    easing: Easing.out(Easing.ease),
                }),
                Animated.timing(positionIcon, {
                    toValue: -36,
                    duration: 1000,
                    useNativeDriver: false,
                    easing: Easing.out(Easing.ease),
                }),
            ])).start();

    }, [positionIcon]);


    useEffect(() => {
        const checkConnection = async () => {
            const state = await NetInfo.fetch();
            await delay(2000);
            dispatch(setConnectionStatus(state.isConnected));
            navigation.replace(state.isConnected ? 'Home' : 'NoConnection');
        };
        if (false) {
            checkConnection();
        }
    }, [fontsLoaded, dispatch, navigation]);

    return (
        <View
            style={{
                flex: 1,
                backgroundColor: colors.background,
                justifyContent: 'center',
                alignItems: 'center'
            }}>
            <View style={{
                alignItems: 'center',
                flexDirection: 'row',
                gap: 10,
                justifyContent: 'center',
            }}>
                <Animated.View style={{
                    position: 'absolute',
                    width: 250,
                    right: positionCurtain,
                    height: '100%',
                    backgroundColor: colors.background,
                    zIndex: 2
                }}></Animated.View>
                <Animated.View style={{
                    position: 'absolute',
                    left: positionIcon,
                    top: 7,
                    zIndex: 3,
                }}>
                    <FontAwesome
                        name="credit-card-alt"
                        size={24} color="white"/>
                </Animated.View>
                <Text
                    style={[typography.textBlack2, {
                        color: colors.textPrimary,
                    }]}>CreditCard</Text>
            </View>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    title: {
        fontSize: 20,
        marginBottom: 20,
    },
});

export default SplashScreen;
